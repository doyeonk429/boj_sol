name: Update Commit Heatmap

on:
  push:
    branches: [ main, master ]
  schedule:
    - cron: '0 0 * * *'
  workflow_dispatch:

jobs:
  update-heatmap:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
    
    - name: Generate Heatmap
      run: |
        python3 << 'EOF'
        import subprocess
        from datetime import datetime, timedelta
        from collections import defaultdict
        
        # 커밋 날짜 가져오기
        result = subprocess.run(['git', 'log', '--date=short', '--pretty=format:%ad'], 
                              capture_output=True, text=True, check=True)
        dates = [d for d in result.stdout.strip().split('\n') if d]
        
        # 날짜별 커밋 수 집계
        commits = defaultdict(int)
        for date in dates:
            commits[date] += 1
        
        # SVG 생성
        today = datetime.now().date()
        start = today - timedelta(days=364)
        start -= timedelta(days=(start.weekday() + 1) % 7)
        
        def get_color(count):
            if count == 0: return '#ebedf0'
            elif count <= 3: return '#9be9a8'
            elif count <= 6: return '#40c463'
            elif count <= 9: return '#30a14e'
            else: return '#216e39'
        
        svg = ['<svg width="800" height="120" xmlns="http://www.w3.org/2000/svg">',
               '<style>.day{outline:1px solid rgba(27,31,35,0.06);}text{font:9px sans-serif;fill:#768390;}</style>',
               '<g transform="translate(10,10)">']
        
        # 요일 레이블
        for i, day in enumerate(['', 'Mon', '', 'Wed', '', 'Fri', '']):
            if day:
                svg.append(f'<text y="{15+i*14+5}">{day}</text>')
        
        # 히트맵 생성
        date = start
        total = 0
        for week in range(53):
            for day in range(7):
                if date <= today:
                    date_str = date.strftime('%Y-%m-%d')
                    count = commits.get(date_str, 0)
                    total += count
                    color = get_color(count)
                    x = 30 + week * 14
                    y = 15 + day * 14
                    svg.append(f'<rect class="day" width="11" height="11" x="{x}" y="{y}" '
                             f'fill="{color}"><title>{date_str}: {count} commits</title></rect>')
                date += timedelta(days=1)
        
        svg.append('</g>')
        svg.append(f'<text x="790" y="115" text-anchor="end" style="font-size:10px">Total: {total} commits</text>')
        svg.append('</svg>')
        
        # 파일 저장
        with open('heatmap.svg', 'w') as f:
            f.write('\n'.join(svg))
        
        # README 업데이트
        try:
            with open('README.md', 'r') as f:
                readme = f.read()
        except:
            readme = "# BOJ Solutions\n\n"
        
        heatmap_section = f'''<!-- HEATMAP:START -->
## 📊 Commit Activity

![Commit Heatmap](./heatmap.svg)

**Total commits:** {total}
<!-- HEATMAP:END -->'''
        
        if '<!-- HEATMAP:START -->' in readme:
            import re
            readme = re.sub(r'<!-- HEATMAP:START -->.*?<!-- HEATMAP:END -->', 
                          heatmap_section, readme, flags=re.DOTALL)
        else:
            readme = heatmap_section + '\n\n' + readme
        
        with open('README.md', 'w') as f:
            f.write(readme)
        
        print(f"✅ Done! Total: {total} commits")
        EOF
    
    - name: Commit changes
      run: |
        git config user.name "github-actions[bot]"
        git config user.email "github-actions[bot]@users.noreply.github.com"
        git add heatmap.svg README.md
        git diff --quiet && git diff --staged --quiet || \
          (git commit -m "Update heatmap [skip ci]" && git push)
